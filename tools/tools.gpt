name: browse-website
description: browse website. Reuse session id if possible.
args: sessionID: session id for existing open browser. 
args: storagePath: the storage path to cookies and userdata.
args: website: the website url to browse. The url should have https protocol prepend.
args: print: whether to print output. Provide true if asked for summarizing content.
args: action: Must provide `browse` as action.
args: headless: Whether to launch actual browsr. Provide true if it is specifically asked to not launch a browser. Alse provide false.

#!http://localhost:9888

---
name: click-button
description: Click buttons from website. It should call browse tool to browse current page first and use keyword to figure out the button name.
args: sessionID: session id for existing open browser.
args: name: the button name
args: exact: whether to do an exact match
args: action: Must provide `click-button` as action.

#!http://localhost:9888

---
name: click-link
description: Click links on elements from website. Use `browse-website` tool with keyword to figure out the link.
args: sessionID: session id for existing open browser.
args: link: the link to click
args: action: Must provide `click-link` as action.

#!http://localhost:9888

---
name: fill
description: fill text content into website.
args: name: the name of the element to fill
args: id: the id of the element to fill
args: content: content to fill in
args: sessionID: session id for existing open browser.
args: action: Must provide `fill` as action.

#!http://localhost:9888

---
name: search
description: search current page and find elements based on keyword.
args: sessionID: session id for existing open browser.
args: storagePath: the storage path to cookies and userdata.
args: keyword: the keyword to search elements
args: action: Must provide `search` as action.

#!http://localhost:9888

---
name: enter-key
description: Only invoke when user specifically ask to press certain keyboard input to the current page. Provide keyboard input into current page based on user instruction. 
args: input: the keyboard input.
args: action: must provide `enter` as action.

#!http://localhost:9888

---
name: get-storage-path
description: calculate chrome userDataDir and provide it as input. Only do it when user wants to reuse existing user data and cookies. Provide output as storagePath to other tools.

#!/bin/bash

# Kill existing chrome browser first
ps -ef | grep Chrome | grep -v grep | awk '{print $2}' | xargs kill -9
OS="$(uname -s)"

case "$OS" in
    Linux*)     dir="${HOME}/.config/google-chrome";;
    Darwin*)    dir="${HOME}/Library/Application Support/Google/Chrome";;
esac

echo "$dir"


